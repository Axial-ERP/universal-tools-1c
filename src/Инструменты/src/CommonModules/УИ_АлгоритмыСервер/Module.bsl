
// Описание
// 
// Параметры:
// 	НаименованиеАлгоритма - Строка - Название элемента справочника Алгоритмы, поиск происходит по наименованию 
// 	ТекстАлгоритма - Строка - Значение реквизита "ТекстАлгоритма"
// 	ПараметрN - Произвольное значение
// Возвращаемое значение:
// 	Строка Результат выполнения сохранения алгоритма
Функция СозданиеАлгоритма(НаименованиеАлгоритма, ТекстАлгоритма = "", Знач Параметр1 = Неопределено, Знач Параметр2 = Неопределено,
	Знач Параметр3 = Неопределено, Знач Параметр4 = Неопределено, Знач Параметр5 = Неопределено,
	Знач Параметр6 = Неопределено, Знач Параметр7 = Неопределено, Знач Параметр8 = Неопределено, Знач Параметр9 = Неопределено)  Экспорт
	
	АлгоритмыСсылка = Справочники.УИ_Алгоритмы.НайтиПоНаименованию(НаименованиеАлгоритма);
	Если АлгоритмыСсылка = Справочники.УИ_Алгоритмы.ПустаяСсылка() Тогда
		АлгоритмыОбъект = Справочники.УИ_Алгоритмы.СоздатьЭлемент();
		АлгоритмыОбъект.Наименование = НаименованиеАлгоритма;	
	Иначе	
		АлгоритмыОбъект = АлгоритмыСсылка.ПолучитьОбъект();
	КонецЕсли;
	Если ЗначениеЗаполнено(ТекстАлгоритма) Тогда
		АлгоритмыОбъект.ТекстАлгоритма = ТекстАлгоритма;
	КонецЕсли;
	
	СтруктураПараметров = Новый структура;
	ЗначениеПараметра = Неопределено;
	
	УстановитьБезопасныйРежим(Истина);
	Для Параметр = 1 По 9 Цикл
		НазваниеПеременной = "Параметр" + Параметр;
		Выполнить("ЗначениеПараметра = " + НазваниеПеременной); 
		Если ЗначениеПараметра <> Неопределено Тогда
			СтруктураПараметров.Вставить("Параметр" + Параметр, ЗначениеПараметра);	
		КонецЕсли;
	КонецЦикла;	
	УстановитьБезопасныйРежим(Ложь);
	
	АлгоритмыОбъект.Хранилище = Новый ХранилищеЗначения(СтруктураПараметров);
	Попытка
		АлгоритмыОбъект.Записать();
	Исключение
		Возврат "Ошибка выполнения записи " + ОписаниеОшибки();
	КонецПопытки;
	
	Возврат  "Успешно сохранено";
КонецФункции

Процедура ВыполнитьАлгоритм(Алгоритм) Экспорт
	Если Не ЗначениеЗаполнено(СокрЛП(Алгоритм.ТекстАлгоритма)) Тогда
		Возврат;
	КонецЕсли;
	
	КонтекстВыполнения = ПолучитьПараметры(Алгоритм);

	РезультатВыполнения = УИ_РедакторКодаКлиентСервер.ВыполнитьАлгоритм(Алгоритм.ТекстАлгоритма, КонтекстВыполнения);

КонецПроцедуры

Функция ПолучитьПараметры(Алгоритм)
	ПараметрыХранилища = Алгоритм.Хранилище.Получить();
	Если ПараметрыХранилища = Неопределено ИЛИ ТипЗнч(ПараметрыХранилища) <> Тип("Структура")Тогда 
		ПараметрыХранилища =  Новый Структура;
	КонецЕсли;
	Возврат ПараметрыХранилища;
КонецФункции