
&НаКлиенте
Процедура ВыполнитьАлгоритм(Команда)
	МассивАлгоритмов = Элементы.Список.ВыделенныеСтроки;
	
	Для Каждого Алгоритм Из МассивАлгоритмов Цикл
		Ошибка = Ложь;
		СообщениеОбОшибке = "";
        СтруктураПередачи = Новый структура;
		
		Если АлгоритмВыполняетсяНаКлиенте(Алгоритм) Тогда
			ВыполнитьАлгоритмНаКлиенте(Алгоритм, СтруктураПередачи);
		Иначе
			ВыполнитьАлгоритмНаСервере(Алгоритм, СтруктураПередачи);
		КонецЕсли;
	КонецЦикла;
КонецПроцедуры

&НаСервере
Функция АлгоритмВыполняетсяНаКлиенте(Алгоритм)

	Возврат Алгоритм.НаКлиенте;

КонецФункции
 
&НаКлиенте
Процедура ВыполнитьАлгоритмНаКлиенте(Алгоритм, СтруктураПередачи)
	Если Не ЗначениеЗаполнено(СокрЛП(Алгоритм.ТекстАлгоритма)) Тогда
		Возврат;
	КонецЕсли;

	КонтекстВыполнения = ПолучитьПараметры(Алгоритм);

	РезультатВыполнения = УИ_РедакторКодаКлиентСервер.ВыполнитьАлгоритм(Алгоритм.ТекстАлгоритма, КонтекстВыполнения);

КонецПроцедуры

&НаСервере
Процедура ВыполнитьАлгоритмНаСервере(Алгоритм, СтруктураПередачи)
	Если Не ЗначениеЗаполнено(СокрЛП(Алгоритм.ТекстАлгоритма)) Тогда
		Возврат;
	КонецЕсли;
	
	КонтекстВыполнения = ПолучитьПараметры(Алгоритм);

	РезультатВыполнения = УИ_РедакторКодаКлиентСервер.ВыполнитьАлгоритм(Алгоритм.ТекстАлгоритма, КонтекстВыполнения);

КонецПроцедуры

&НаСервере
Функция ПолучитьПараметры(Алгоритм)
	ПараметрыХранилища = Алгоритм.Хранилище.Получить();
	Если ПараметрыХранилища = Неопределено ИЛИ ТипЗнч(ПараметрыХранилища) <> Тип("Структура")Тогда 
		ПараметрыХранилища =  Новый Структура;
	КонецЕсли;
	Возврат ПараметрыХранилища;
КонецФункции

