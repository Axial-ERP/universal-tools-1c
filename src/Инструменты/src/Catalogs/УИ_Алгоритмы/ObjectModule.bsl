#Область СлужебныйПрограммныйИнтерфейс

Функция ПолучитьПараметры() Экспорт
	ПараметрыХранилища = Хранилище.Получить();
	Если ПараметрыХранилища = Неопределено ИЛИ ТипЗнч(ПараметрыХранилища) <> Тип("Структура")Тогда 
		ПараметрыХранилища =  Новый Структура;
	КонецЕсли;
	Возврат ПараметрыХранилища;
КонецФункции

Функция ПолучитьПараметр(НаименованиеПараметра) Экспорт
	ПараметрыХранилища = Хранилище.Получить();
	Если ПараметрыХранилища <> Неопределено И ПараметрыХранилища.Свойство(НаименованиеПараметра) Тогда
		Возврат ПараметрыХранилища[НаименованиеПараметра];
	Иначе 
		Возврат Неопределено;
	КонецЕсли;
КонецФункции

Функция УдалитьПараметр(Ключ) Экспорт
	ПараметрыХранилища = ПолучитьПараметры();
	ПараметрыХранилища.Удалить(Ключ);
	Хранилище = Новый ХранилищеЗначения(ПараметрыХранилища);
	Записать();
	Возврат Истина;	
КонецФункции

Функция ПереименоватьПараметр(Ключ, НовИмя) Экспорт
		Попытка
			ПараметрыХранилища = ПолучитьПараметры();
			Значение = ПараметрыХранилища[Ключ];
			ПараметрыХранилища.Удалить(Ключ);
			ПараметрыХранилища.Вставить(НовИмя,Значение);
			Хранилище = Новый ХранилищеЗначения(ПараметрыХранилища);
			Записать();
			Возврат Истина;
		Исключение
			Возврат Ложь;
		КонецПопытки;
КонецФункции

Функция ИзменитьПараметр(Ключ, ВходящееЗначение) Экспорт
	ПараметрыХранилища = ПолучитьПараметры();
	ПараметрыХранилища.Вставить(Ключ,ВходящееЗначение);
	Хранилище = Новый ХранилищеЗначения(ПараметрыХранилища);
	Записать();
	Возврат Истина;
КонецФункции

#КонецОбласти