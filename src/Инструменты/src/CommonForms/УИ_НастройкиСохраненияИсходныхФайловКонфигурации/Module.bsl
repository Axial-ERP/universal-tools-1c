#Область ОписаниеПеременных

#КонецОбласти

#Область ОбработчикиСобытийФормы

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	ИсточникиКода = УИ_РедакторКодаСервер.ДоступныеИсточникиИсходногоКода();
	
	Для Каждого ТекИсточник ИЗ ИсточникиКода Цикл
		НС = КаталогиСохранения.Добавить();
		НС.Пометка = Истина;
		НС.Источник = ТекИсточник.Значение;
		НС.ТолькоМодули = Истина;
		
		НС.Каталог = Параметры.ТекущиеКаталоги[НС.Источник];
	КонецЦикла;
КонецПроцедуры

&НаСервере
Процедура ОбработкаПроверкиЗаполненияНаСервере(Отказ, ПроверяемыеРеквизиты)
	Для Каждого Стр Из КаталогиСохранения Цикл
		Если Не Стр.Пометка Тогда
			Продолжить;
		КонецЕсли;
		
		Если Не ЗначениеЗаполнено(Стр.Каталог) Тогда
			УИ_ОбщегоНазначенияКлиентСервер.СообщитьПользователю("Для источника "+Стр.Источник+" не указан каталог сохранения", , , , Отказ);
		КонецЕсли;
	КонецЦикла;
КонецПроцедуры




#КонецОбласти

#Область ОбработчикиСобытийЭлементовШапкиФормы

&НаКлиенте
Процедура КаталогиСохраненияКаталогНачалоВыбора(Элемент, ДанныеВыбора, СтандартнаяОбработка)
	ТекДанные = Элементы.КаталогиСохранения.ТекущиеДанные;
	Если ТекДанные = Неопределено Тогда
		Возврат;
	КонецЕсли;
	
	ОписаниеФайла = УИ_ОбщегоНазначенияКлиент.ПустаяСтруктураОписанияВыбираемогоФайла();
	ОписаниеФайла.ИмяФайла = ТекДанные.Каталог;
	
	ДопПараметрыОповещения = Новый Структура;
	ДопПараметрыОповещения.Вставить("ТекущаяСтрока", Элементы.КаталогиСохранения.ТекущаяСтрока);
	
	УИ_ОбщегоНазначенияКлиент.ПолеФормыИмяФайлаНачалоВыбора(ОписаниеФайла, Элемент, ДанныеВыбора, СтандартнаяОбработка,
		РежимДиалогаВыбораФайла.ВыборКаталога,
		Новый ОписаниеОповещения("КаталогиСохраненияКаталогНачалоВыбораЗаверешение", ЭтотОбъект,
		ДопПараметрыОповещения));
КонецПроцедуры

#КонецОбласти


#Область ОбработчикиКомандФормы


&НаКлиенте
Процедура ВыбратьОбщийКаталогСохранения(Команда)
	ДВФ = Новый ДиалогВыбораФайла(РежимДиалогаВыбораФайла.ВыборКаталога);
	ДВФ.МножественныйВыбор = Ложь;
	ДВФ.Показать(Новый ОписаниеОповещения("ВыбратьОбщийКаталогСохраненияЗавершение", ЭтотОбъект));
КонецПроцедуры

&НаКлиенте
Процедура УстановитьПометки(Команда)
	Для Каждого Стр Из КаталогиСохранения Цикл
		Стр.Пометка = Истина;
	КонецЦикла;
КонецПроцедуры

&НаКлиенте
Процедура СнятьПометки(Команда)
	Для Каждого Стр Из КаталогиСохранения Цикл
		Стр.Пометка = Ложь;
	КонецЦикла;
КонецПроцедуры

&НаКлиенте
Процедура ВыгрузитьИсходныеМодули(Команда)
	Если Не ПроверитьЗаполнение() Тогда
		Возврат;
	КонецЕсли;
	
	НастройкиСохраненияИсходников = Новый Соответствие();
	
	Для Каждого Стр Из КаталогиСохранения Цикл
		Если Не Стр.Пометка Тогда
			Продолжить;
		КонецЕсли;
		
		ОписаниеИсточника = Новый Структура;
		ОписаниеИсточника.Вставить("Каталог", Стр.Каталог);
		ОписаниеИсточника.Вставить("ТолькоМодули", Стр.ТолькоМодули);
		
		НастройкиСохраненияИсходников.Вставить(Стр.Источник, ОписаниеИсточника);
	КонецЦикла;
	
	Закрыть(НастройкиСохраненияИсходников);
КонецПроцедуры


#КонецОбласти

#Область СлужебныеПроцедурыИФункции

&НаКлиенте
Процедура ВыбратьОбщийКаталогСохраненияЗавершение(Результат, ДополнительныеПараметры) Экспорт
	Если Результат = Неопределено Тогда
		Возврат;
	КонецЕсли;
	
	Если Результат.Количество()=0 Тогда
		Возврат;
	КонецЕсли;
	
	ОбщийКаталогСохранения = Результат[0];
	
	Для Каждого ТекСТр Из КаталогиСохранения Цикл
		Если ЗначениеЗаполнено(ТекСТр.Каталог) Тогда
			Продолжить;
		КонецЕсли;
		
		ТекСТр.Каталог = ОбщийКаталогСохранения + ПолучитьРазделительПути() + ТекСТр.Источник;
	КонецЦикла;
	
КонецПроцедуры



&НаКлиенте
Процедура КаталогиСохраненияКаталогНачалоВыбораЗаверешение(Результат, ДополнительныеПараметры) Экспорт
	Если Результат = Неопределено Тогда
		Возврат;
	КонецЕсли;
	
	Если Результат.Количество()=0 Тогда
		Возврат;
	КонецЕсли;
	
	ТекДанные = КаталогиСохранения.НайтиПоИдентификатору(ДополнительныеПараметры.ТекущаяСтрока);
	ТекДанные.Каталог = Результат[0];
	
	Модифицированность = Истина;
КонецПроцедуры

#КонецОбласти