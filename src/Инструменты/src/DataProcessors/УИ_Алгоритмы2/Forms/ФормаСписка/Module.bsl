

#Область ОписаниеПеременных

#КонецОбласти

#Область ОбработчикиСобытийФормы

// Код процедур и функций



#КонецОбласти

#Область ОбработчикиСобытийЭлементовШапкиФормы

// Код процедур и функций

#КонецОбласти

#Область ОбработчикиСобытийЭлементовТаблицыФормыСписок //<ИмяТаблицыФормы>

&НаКлиенте
Процедура СписокПередНачаломИзменения(Элемент, Отказ)
	Отказ = Истина;
	
	ТекДанные = Элементы.Список.ТекущиеДанные;
	Если ТекДанные = Неопределено Тогда
		Возврат;
	КонецЕсли;

	УИ_АлгоритмыКлиент.РедактироватьАлгоритм(ТекДанные.Идентификатор,
											 Новый ОписаниеОповещения("ПослеЗавершенияИзмененияАлгоритма", ЭтотОбъект));
КонецПроцедуры


&НаКлиенте
Процедура СписокПередНачаломДобавления(Элемент, Отказ, Копирование, Родитель, ЭтоГруппа, Параметр)
	Отказ = Истина;

	КопируемыйАлгоритм = Неопределено;
	Если Копирование Тогда
		ТекДанные = Элементы.Список.ТекущиеДанные;
		Если ТекДанные <> Неопределено Тогда
			КопируемыйАлгоритм = ТекДанные.Идентификатор;
		КонецЕсли;
	КонецЕсли;

	УИ_АлгоритмыКлиент.СоздатьАлгоритм(Новый ОписаниеОповещения("ПослеЗавершенияИзмененияАлгоритма", ЭтотОбъект),
									   КопируемыйАлгоритм);

КонецПроцедуры


#КонецОбласти

#Область ОбработчикиКомандФормы

// Код процедур и функций

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

&НаКлиенте
Процедура ПослеЗавершенияИзмененияАлгоритма(Результат, ДополнительныеПараметры) Экспорт
	
КонецПроцедуры

#КонецОбласти
